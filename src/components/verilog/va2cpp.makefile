# Makefile used to run ADMS on a Verilog-A source to emit C++ code.

# PREFIX can be passed as parameter to make:
# $make -f va2lib.make PREFIX='/qucs/prefix/'

######################
## Makefile Parameters
######################

# Module/file name
MODEL=

# Please define
PREFIX=

# Location of installed Qucs XML files
INC=$(PREFIX)/include/qucs-core

# Locate admsXml
admsXml=$(PREFIX)/bin/admsXml

# file suffix
VA=.va

# handle command to clean
ifeq ($(OS),Windows_NT)
  DELETE=-del
else
  DELETE=rm -f
endif

# Generated sources
GEN_SRC=$(MODEL).core.cpp $(MODEL).core.h \
        $(MODEL).analogfunction.h $(MODEL).analogfunction.cpp \
        $(MODEL).defs.h \

# Required Qucs XML files
XML_FILES=$(INC)/qucsVersion.xml    \
          $(INC)/qucsMODULEcore.xml \
          $(INC)/qucsMODULEdefs.xml \
          $(INC)/analogfunction.xml

# Files generated by admsXml
ADMS_GEN=.adms.implicit.xml .interface.xml .$(MODEL).va.adms constants.vams disciplines.vams

# Default
.PHONY: va2cpp

# Main target
# clean before building
va2cpp: clean $(GEN_SRC)

# Run admsXml, create C++ out of Verilog-A
# Last argument '-A dyload' enable code generation for the dynamic loader
# The '-A' is not really defined. admsXml will take almost any `-[CHAR] command`
# Include the search path to use constants.vams disciplines.vams distributed by qucs
# wich are known to work.
$(GEN_SRC): $(MODEL)$(VA)
	@echo '# va2cpp - Creating C++ sources.'
	$(admsXml) $(MODEL)$(VA) \
                           -I $(INC)                    \
                           -e $(INC)/qucsVersion.xml    \
                           -e $(INC)/qucsMODULEcore.xml \
                           -e $(INC)/qucsMODULEdefs.xml \
                           -e $(INC)/analogfunction.xml \
                           -A dyload
clean:
	@echo '# va2cpp - Removing autogenerated files.'
	$(DELETE) $(GEN_SRC) $(ADMS_GEN)
	@echo ''
