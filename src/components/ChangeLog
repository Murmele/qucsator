2004-08-16  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msopen.cpp: Fixed formulas for open end and
	added 'Model' parameter.

2004-08-16  Stefan Jahn  <jahn@mwt.ee.tu-berlin.de>

	* devices/bjt.cpp: Implemented excess phase parameter of
	BJT model.

2004-08-14  Stefan Jahn  <stefan@lkcc.org>

	* devices/diode.cpp: Adjusted invalid backward current for
	noise calculation.

	* devices/mosfet.cpp: Bugfix in small signal Y-parameter
	computation.

	* devices/device.cpp (fetCapacitanceMeyer): Fixed bug in
	distributed gate-oxid capacitance model.

2004-08-12  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/mscorner.cpp: Fixed bug in frequency range
	detection and brushed up the code a bit.

2004-08-08  Stefan Jahn  <stefan@lkcc.org>

	* constants.h (cubic): Fixed a severe macro bug.  cubic() did
	not work for negative arguments.

2004-08-06  Stefan Jahn  <stefan@lkcc.org>

	* devices/diode.cpp: Fixed noise calculation.  Both field and
	diffusion current contribute independently.

2004-08-05  Stefan Jahn  <stefan@lkcc.org>

	* devices/mosfet.cpp: Implemented sidewall capacitances at the
	perimeter of the drain and source junctions.

2004-08-03  Stefan Jahn  <stefan@lkcc.org>

	* devices/mosfet.cpp: Added and implementet some more
	component properties.

	* devices/mosfet.h (class mosfet): New device.  This mosfet
	implementation is 'level 1'.  Added wherever necessary. To be
	tested...

	* devices/jfet.cpp: Fixed bug in gds computation in forward
	saturation region.

	* devices/device.cpp: Added some helper functionaly for FET
	models.  This includes convergence helpers as well as Meyer's
	capacitances formulas.

2004-08-02  Michael Margraf  <michael.margraf@alumni.tu-berlin.de>

	* added microstrip component msstep, msopen and msgap

2004-08-01  Stefan Jahn  <stefan@lkcc.org>

	* devices/diode.cpp: Implemented 'Isr', 'Nr' and 'Fc' an d'Cp'
	diode model parameters.

	* spfile.cpp: Converting different kind of multi-port
	parameters to S-parameters if necessary.

2004-07-31  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msmbend.cpp, microstrip/mscorner.cpp: Simplified
	generation of S-parameters.

	* devices/diode.cpp: Additionally using flicker noise
	parameters for noise calculation.

2004-07-30  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.h (class msline): Both the quasi-static
	and dispersion analysing function are now static function of
	the class msline.  Thus they can be used by other microstrip
	components as well.

	* pac.cpp: Calculate S-parameter of the AC power source. 
	This is now necessary because of subcircuit definitions where
	the component is not used as S-parameter port.

2004-07-28  Stefan Jahn  <stefan@lkcc.org>

	* devices/bjt.cpp: Added noise calculation to BJT model.

2004-07-27  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msmbend.cpp: Fixed typo.

	* devices/jfet.cpp: Using helper functionality from device
	class where possible. 

	* devices/diode.cpp: Tried to fix noise calculation.

2004-07-26  Stefan Jahn  <stefan@lkcc.org>

	* devices/bjt.cpp: Considering polarity of BJT in device model
	equations.

	* devices/jfet.cpp: Added preliminary noise calculation.

	* spfile.cpp: Some code cleanups.  Noise correlation matrix
	expansion not yet working...

2004-07-25  Stefan Jahn  <stefan@lkcc.org>

	* devices/diode.cpp: Added noise calculation function.

	* tline.cpp: Added DC model being an ideal short.

	* spfile.cpp: Adding an additional reference port using
	S-parameter matrix transformations.

	* resistor.cpp: Moved noise calculation to calcNoise().

	* attenuator.cpp, isolator.cpp: Added noise calculation
	function.

2004-07-24  Stefan Jahn  <stefan@lkcc.org>

	* inoise.h (class inoise): New component: current noise source.

	* vnoise.h (class vnoise): Added noise voltage source component
	and made appropriate changes in the netlist checker and factory.

2004-07-21  Stefan Jahn  <stefan@lkcc.org>

	* spfile.cpp (interpolate_lin): Renamed 'rect' into
	'rectangular' for the 'Data' property.

	* spfile.h (class spfile): New class representing a S-parameter
	file (e.g. touchstone) component.  During S-parameter simulation
	the values stored in the file are interpolated if necessary.

2004-07-18  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: Fixed strip thickness effect
	formulas by Hammerstad and Jensen.

2004-07-12  Stefan Jahn  <stefan@lkcc.org>

	* constants.h (quadr): Renamed quad() to quadr() to avoid
	name clash with some platforms defining quad as data type.

2004-07-11  Stefan Jahn  <stefan@lkcc.org>

	* devices/diode.cpp: Simplified computation of S-parameters.
	Code cleanups using the new helper functionality in device
	class.

	* devices/device.cpp: Removed applyResistance() function.
	Now using a real resistor circuit for additional external
	resistances of non-linear devices.  Changed all callers.
	New functions splitCapacitance() and disableCapacitance()
	which can be used to add an additional capacitance to the
	netlist.
	(pnCriticalVoltage): New function calculating the critical
	voltage of a pn-junction (often used in DC analysis).

	* devices/bjt.cpp: Partly implemented the small signal
	model.  Needs some testing...

	* resistor.cpp (calcDC): Also compute the MNA matrix
	entries in calcDC().  This is useful if a resistor circuits
	resistance is controlled by another circuit.

	* capacitor.cpp: Using admittance to for the S-parameter
	matrix instead the impedance.

2004-07-10  Stefan Jahn  <stefan@lkcc.org>

	* devices/device.cpp: Made all public functions 'friend'.
	Added pnCurrent(), pnConductance() and pnCapacitance()
	functionality because this is used very often in non-linear
	devices.  Changed all callers of new 'friend' functions.

	* devices/bjt.cpp: Corrected DC model of SGP BJT device.  
	Approved that the implemented model is equivalent to the
	Spice model.  Interpreting zero as infinity for those
	model parameters having an infinity default.  Setting up
	operating points for S-parameter analysis.

2004-07-09  Stefan Jahn  <stefan@lkcc.org>

	* devices/bjt.cpp: Implemented some of the operating points
	of the SGP model.

2004-07-07  Stefan Jahn  <stefan@lkcc.org>

	* devices/bjt.cpp: Started to implement the DC model of the
	standard SGP (Spice Gummel Poon) model fo BJTs.
	Fixed the Rbb model of SGP.

2004-07-04  Stefan Jahn  <stefan@lkcc.org>

	* resistor.cpp: Using new 'Temp' property for noise parameter
	simulation.

2004-06-27  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: Using 'DispModel' and 'Model' 
	properties correctly.

2004-06-26  Michael Margraf  <michael.margraf@alumni.tu-berlin.de

	* added DC model to phaseshifter.cpp/.h

2004-06-26  Stefan Jahn  <stefan@lkcc.org>

	* constants.h: Globally defined sqr, cubic, quad, coth, sech
	and cosech functions.

	* resistor.cpp: Added noise wave correlation matrix.

2004-06-22  Stefan Jahn  <stefan@lkcc.org>

	* devices/jfet.cpp: Using 'Type' property for model polarity,
	i.e. n-channel or p-channel junction fet.

2004-06-20  Stefan Jahn  <stefan@lkcc.org>

	* devices/jfet.cpp: Implemented non-ideal saturation current
	parameters of gate-source and gate-drain diodes.
	Also prepared JFET model for n- and p-type devices.

2004-06-19  Stefan Jahn  <stefan@lkcc.org>

	* devices/device.h (class device): New class containing some
	arbitrary routines for non-linear devices.

	* devices/jfet.cpp: Implemented junction capacitances using
	the model parameter Fc.

2004-06-10  Stefan Jahn  <stefan@lkcc.org>

	* jfet.cpp: Implemented S-parameters and operating points of
	junction FET.

2004-06-09  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp: Using symbolic names for anode and cathode node.
	Incorporated transit time 'Tt' parameter into operating point
	information.

2004-06-06  Stefan Jahn  <stefan@lkcc.org>

	* jfet.cpp: Corrections in the jfet Shichman-Hodges equations
	and derivatives.

	* diode.cpp: Fixed a bug in splitting and disabling resitances
	from devices.

2004-06-05  Stefan Jahn  <stefan@lkcc.org>

	* jfet.h (class jfet): Started to implement the DC model of
	a simple junction FET.

2004-06-04  Stefan Jahn  <stefan@lkcc.org>

	* resistor.cpp: It is now possible to set R=0.  In this case
	the actual resistor is replaced by a voltage source with U=0.

	* diode.cpp: Implemented series resistance 'Rs' by creating
	and new circuit and re-arranging the node names.

2004-05-22  Stefan Jahn  <stefan@lkcc.org>

	* biastee.cpp: Fixed Bias-T DC model.

	* iac.h (class iac):  Implemented DC model as zero current
	source.

	* vac.cpp: Implemented DC model of AC voltage source as zero
	voltage source.

2004-05-19  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: Including <string.h> for strcmp().
	This was necessary on a Sarge-Debian installation.

	* diode.cpp: Improved DC convergence of diode model.

2004-05-18  Stefan Jahn  <stefan@lkcc.org>

	* dcfeed.cpp: Implemented DC model (zero voltage source).

	* dcblock.h (class dcblock):  Implemented DC model as
	zero current source.

	* capacitor.h (class capacitor): Implemented DC model as
	zero current source.

	* inductor.cpp: Implemented DC model (zero voltage source).

2004-05-16  Michael Margraf  <michael.margraf@alumni.tu-berlin.de

	* add #include <string.h> in msline.cpp

2004-05-16  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: Implemented influence of finite strip
	thickness 't' on quasi-static impedance and effective relative
	dielectric constant for Wheeler and Hammerstad equations.

2004-05-07  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: Added dispersion terms, dielectrical
	and conductor losses for the microstrip line.

2004-05-06  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp (analyseZ0): Implemented a function
	which calculates the impedance of a microstrip line based on
	the lines and substrates geometry.

2004-05-01  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp: Improved convergence in backward region of
	the pn-junction.

2004-04-26  Stefan Jahn  <stefan@lkcc.org>

	* circulator.cpp: Implemented DC analysis for circulator.

2004-04-25  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.cpp: The file can be used as template
	for microstrip components.

	* component.h: Including microstrip component headers.

2004-04-04  Stefan Jahn  <stefan@lkcc.org>

	* attenuator.cpp, isolator.cpp: Implemented DC calculation.

2004-02-18  Stefan Jahn  <stefan@lkcc.org>

	* constants.h: Adjusted natural constants to correspond
	with the NIST.

2004-02-17  Stefan Jahn  <stefan@lkcc.org>

	* iac.cpp (iac): New component representing the AC current
	source.

	* pac.cpp: Implemented DC calculation.

2004-02-16  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp, resistor.cpp: Changed Y matrix (G-MNA) entries.
	Added S-parameter calculation to diode model including the 
	operating point computation.

2004-02-14  Stefan Jahn  <stefan@at66hft.ee.tu-berlin.de>

	* gyrator.cpp: Fixed MNA matrices for gyrator.

	* strafo.cpp: Fixed MNA matrices for symmetrical transformer.

	* trafo.cpp: Fixed the A matrix of the ideal transformer.

2004-02-10  Stefan Jahn  <stefan@lkcc.org>

	* ccvs.cpp, cccs.cpp: Fixed MNA stamps for DC analysis.

2004-02-09  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp: New parameter 'n' representing the ideality
	coefficient of the saturation current.

	* iprobe.cpp (iprobe): New component.  The DC current probe
	can be used for measuring DC currents.  It is simply based on
	the DC voltage source with a voltage of zero volts.

2004-02-03  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp: Fixed iterative implementation of the simple diode
	component.

2004-02-01  Stefan Jahn  <stefan@lkcc.org>

	* diode.cpp: New component.

2004-01-31  Stefan Jahn  <stefan@lkcc.org>

	* gyrator.cpp: Implemented MNA matrix values for DC simulation.

2004-01-30  Stefan Jahn  <stefan@lkcc.org>

	* ccvs.cpp, strafo.cpp, trafo.cpp: Implemented MNA matrix 
	values for DC simulation.

2004-01-28  Stefan Jahn  <stefan@lkcc.org>

	* cccs.cpp, idc.cpp, vccs.cpp, vcvs.cpp, vdc.cpp: Applied
	new scheme necessary for the MNA matrices.

2004-01-24  Stefan Jahn  <stefan@lkcc.org>

	* microstrip/msline.h (class msline): New class being a 
	template for the microstrip library components.

	* microstrip/substrate.h (class substrate): New class 
	representing a microstrip substrate.

2004-01-13  Stefan Jahn  <stefan@lkcc.org>

	* tline.cpp, gyrator.cpp, phaseshifter.cpp: New components.
	Made appropriate changes in netlist input parser and 
	Makefiles.

2003-12-26  Stefan Jahn  <stefan@lkcc.org>

	* resistor.cpp: Implemented calcG() method for DC analysis.

	* component_id.h: New file containing the circuit identifiers
	for each know circuit.

2003-12-20  Stefan Jahn  <stefan@lkcc.org>

	* vdc.cpp, idc.cpp, vac.cpp: New components.

	* itrafo.cpp: Using a port impedance dependent turns ratio
	the component is now used to allow other port impedances than
	50 Ohms.

2003-12-07  Stefan Jahn  <stefan@lkcc.org>

	* strafo.cpp: New component.  Symmetrical 6-port 
	transformator.

2003-12-01  Stefan Jahn  <stefan@lkcc.org>

	* itrafo.cpp, itrafo.h: New component.  The ideal 3-port 
	transformator is for allowing differential s parameter ports 
	only.
